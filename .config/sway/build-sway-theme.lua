#!/usr/bin/lua5.1

local theme = require('theme-switcher')
local c = theme.get_colors()

local function get_script_current_directory()
  -- Get the full path of the current script
  local info = debug.getinfo(1, "S")
  local script_path = info.source:match("^@(.+)$")

  -- Extract the directory path from the full path
  if script_path then
    return script_path:match("^(.*[\\/])"), script_path
  else
    return nil, nil, "Unable to determine script directory"
  end
end

local script_dir, script_path, err = get_script_current_directory()
if err then
  os.exit(1, true)
end

local themeBase = [[
# DO NOT EDIT THIS FILE
# This file is generated by %s
# Please edit this file instead to change the bar configuration
bar {
  position top
  strip_workspace_numbers yes

  # When the status_command prints a new line to stdout, swaybar updates.
  # The default just shows the current date and time.
  # Find valid flags for the status bar here https://github.com/RolandWarburton/sway-bar-status-line
  status_command $HOME/.config/sway/statusBar

  # bar colors
  %s
}
]]

local darkTheme = [[
colors {
    focused_workspace %s %s %s
    background %s
    inactive_workspace %s %s %s
  }
]]

darkTheme = string.format(
  darkTheme,
  c.base1,
  c.accent1,
  c.accent3,
  c.base1,
  c.base1,
  c.base3,
  c.accent3
)

local lightTheme = [[
colors {
    focused_workspace %s %s %s
    background %s
    inactive_workspace %s %s %s
  }
]]

lightTheme = string.format(
  lightTheme,
  c.base1, -- active tab border
  c.base1, -- active tab background
  c.accent2, -- active tab text
  c.base1, -- bar background
  c.base1,
  c.base1,
  c.base2
)

local theme_current = theme.get_theme_value()

-- the file structure looks something like this
-- .
-- ├── config
-- ├── modules
-- │   └── bar.conf <-- generated by sway-theme
-- ├── statusBar
-- └── sway-theme.lua
local file_path = script_dir .. "modules/bar.conf"
local file = io.open(file_path, "w")

if file then
  if theme_current == "light" then
    file:write(string.format(themeBase, script_path, lightTheme))
  else
    file:write(string.format(themeBase, script_path, darkTheme))
  end
  print('written')
  file:close()
  os.execute('zsh -i -c "/usr/local/bin/swaymsg reload"')
else
  print("Failed to write to file: " .. file_path)
  os.exit(1)
end
